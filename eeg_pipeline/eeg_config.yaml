# EEG Pipeline Configuration
# Organized by functional areas for better maintainability

# =============================================================================
# PROJECT SETTINGS
# =============================================================================
project:
  root: "."
  task: "thermalactive"
  subjects: ["000"]
  bids_root: "eeg_pipeline/bids_output"
  source_root: "eeg_pipeline/source_data"
  runs_per_subject: 6
  trials_per_run: 11

paths:
  project_root: "."
  bids_root: "eeg_pipeline/bids_output"
  deriv_root: "eeg_pipeline/bids_output/derivatives"
  source_data: "eeg_pipeline/source_data"

# =============================================================================
# DATA ALIGNMENT AND EVENT HANDLING
# =============================================================================
event_columns:
  temperature: ["stimulus_temp", "stimulus_temperature", "temp", "temperature"]
  rating: ["vas_final_coded_rating", "vas_final_rating", "vas_rating", "pain_intensity", "pain_rating", "rating"]
  pain_binary: ["pain_binary_coded", "pain_binary", "pain"]

# Data alignment behavior
alignment:
  allow_misaligned_trim: false  # Strict alignment by default
  min_alignment_samples: 5      # Minimum samples required for valid alignment

# =============================================================================
# FOUNDATIONAL ANALYSIS (Script 01)
# =============================================================================
foundational_analysis:
  erp:
    picks: "eeg"
    combine: "gfp"
    include_tmax_in_crop: false
    default_crop_tmin: null
    default_crop_tmax: null
    pain_color: "crimson"
    nonpain_color: "navy"
    plots_subdir: "01_foundational_analysis"
    counts_file_name: "counts_pain.tsv"
    output_files:
      pain_gfp: "erp_pain_binary_gfp.png"
      pain_butterfly: "erp_pain_binary_butterfly.png"
      temp_gfp: "erp_by_temperature_gfp.png"
      temp_butterfly: "erp_by_temperature_butterfly.png"
      temp_butterfly_template: "erp_by_temperature_butterfly_{label}.png"

# =============================================================================
# TIME-FREQUENCY ANALYSIS (Script 02)
# =============================================================================
time_frequency_analysis:
  # Baseline and analysis windows
  baseline_window: [-5.0, -0.01]
  plateau_window: [3.0, 10.5]
  
  # TFR computation parameters
  tfr:
    freq_min: 1.0
    freq_max: 100.0
    n_freqs: 40
    n_cycles_factor: 2.0
    decim: 4
    picks: "eeg"
    
  # Frequency band definitions
  bands:
    delta: [1.0, 3.9]
    theta: [4.0, 7.9]
    alpha: [8.0, 12.9]
    beta: [13.0, 30.0]
    gamma: [30.1, 80.0]
    
  # Region of Interest definitions
rois:
  # --- Broad sets you already use (kept) ---
  Frontal: ["^(Fpz|Fp[12]|AFz|AF[3-8]|Fz|F[1-8])$"]
  Central: ["^(Cz|C[1-6])$"]
  Parietal: ["^(Pz|P[1-8])$"]
  Occipital: ["^(Oz|O[12]|POz|PO[3-8])$"]
  Temporal: ["^(T7|T8|TP7|TP8|TP9|TP10|FT7|FT8|FT9|FT10)$"]
  Sensorimotor:
    - "^(FC[1-6]|FCz)$"
    - "^(C[1-6]|Cz)$"
    - "^(CP[1-6]|CPz)$"

  # --- Pain-focused, lateralized (additions) ---
  # Contralateral (RIGHT) peri-Rolandic for LEFT arm pain
  S1_R:       ["^(C4|C6|CP4|CP6)$"]
  M1_R:       ["^(FC4|C4|CP4)$"]
  PeriRolandic_R: ["^(FC4|C4|C6|CP4|CP6)$"]  # union S1_R + M1_R

  # Ipsilateral (LEFT) mirrors for contrasts/control
  S1_L:       ["^(C3|C5|CP3|CP5)$"]
  M1_L:       ["^(FC3|C3|CP3)$"]
  PeriRolandic_L: ["^(FC3|C3|C5|CP3|CP5)$"]

  # Secondary somatosensory / insula proxies (scalp-accessible)
  S2_R:       ["^(T8|TP8|FT8|CP6)$"]
  S2_L:       ["^(T7|TP7|FT7|CP5)$"]

  # Midline cingulate / ACC proxies
  MCC_ACC:    ["^(FCz|Cz|Fz)$"]

  # Posterior parietal (decision/rating support)
  Parietal_R: ["^(P2|P4|P6|PO4|PO8)$"]
  Parietal_L: ["^(P1|P3|P5|PO3|PO7)$"]

  # Compact temporal composites with your extended sites
  Temporal_R: ["^(T8|TP8|TP10|FT8|FT10)$"]
  Temporal_L: ["^(T7|TP7|TP9|FT7|FT9)$"]

  # Optional composites for quick summaries
  PainCore_R: ["^(FC4|C4|C6|CP4|CP6|T8|TP8|FT8)$"]
  PainCore_L: ["^(FC3|C3|C5|CP3|CP5|T7|TP7|FT7)$"]

      
  # ROI visualization parameters
  roi_mask_params:
    marker: 'o'
    markerfacecolor: 'w'
    markeredgecolor: 'k'
    linewidth: 0.5
    markersize: 4
  roi_highlight_enabled: false  # Show ROI sensor markers on topomaps
  
  # Baseline correction parameters
  min_baseline_samples: 5
  
  # Topomap visualization parameters
  topo_contours: 6
  topo_cmap: "RdBu_r"
  colorbar_fraction: 0.03
  colorbar_pad: 0.02
  
  # Analysis strategy parameters
  temperature_strategy: "pooled"  # How to handle temperature conditions
  
  # Significance mask parameters for statistical plots
  sig_mask_params:
    marker: 'o'
    markerfacecolor: 'none'
    markeredgecolor: 'k'
    linewidth: 1.0
    markersize: 5

# =============================================================================
# FEATURE ENGINEERING (Script 03)
# =============================================================================
feature_engineering:
  min_baseline_samples: 5
  tfr_spectrogram_vlim: null    # Optional override for TFR plot color limits
  save_tfr_with_sidecar: true   # Save TFR files with JSON metadata
  require_tfr_sidecar: true     # Require sidecar to standardize TFR units (avoid mixed units)
  allow_tfr_heuristics: false   # If true, allow heuristic unit detection when sidecar missing
  
  # Feature extraction parameters
  features:
    plateau_start: 3.0
    plateau_end: 10.5
    
  # TFR processing (inherits from time_frequency_analysis but can override)
  tfr_processing:
    baseline_mode: "logratio"    # Default baseline correction mode
    save_individual_bands: true  # Save separate files per frequency band

# =============================================================================
# RAW DATA PROCESSING
# =============================================================================
raw_to_bids:
  default_montage: "easycap-M1"
  default_line_freq: 60.0

# =============================================================================
# BEHAVIOR ANALYSIS (Script 04)
# =============================================================================
behavior_analysis:
  # Time-frequency heatmap defaults
  time_frequency_heatmap:
    time_resolution: 0.1
    freq_resolution: 2.0
    time_window: [0.0, 10.5]
    freq_range: [1.0, 80.0]
    alpha: 0.05
    roi_selection: null
    n_cycles_factor: 2.0
    decim: 4
    min_valid_points: 5
    
  # Spline smoothing for diagnostics
  spline:
    smoothing_factor: 0.3
    min_smoothing: 1.0
    max_iter: 50
    tolerance: 1e-3
    
  # Statistical analysis parameters
  statistics:
    bootstrap_n: 1000
    min_correlation_samples: 10
    fdr_alpha: 0.05
    correlation_method: "spearman"  # Default correlation method
    
  # Feature selection parameters
  predictors:
    top_n: 20
    
  # Visualization parameters
  visualization:
    smoothing_sigma: 2.0
    scatter_plot_size: 30
    scatter_plot_alpha: 0.7

# =============================================================================
# VISUALIZATION SETTINGS
# =============================================================================
visualization:
  # Frequency band colors
  band_colors:
    delta: "#4169e1"   # royalblue
    theta: "purple"
    alpha: "green"
    beta: "orange"
    gamma: "red"

# =============================================================================
# POWER ANALYSIS SETTINGS
# =============================================================================
power:
  bands_to_use: ["delta", "theta", "alpha", "beta", "gamma"]

# =============================================================================
# DECODING ANALYSIS SETTINGS
# =============================================================================
decoding:
  cv:
    inner_splits: 5
    
  models:
    elasticnet:
      max_iter: 200000
      tol: 1e-3
      selection: "random"
      grid:
        alpha: [1e-3, 1e-2, 1e-1, 1, 10, 100]
        l1_ratio: [0.2, 0.5, 0.8]
    random_forest:
      n_estimators: 500
      estimator_n_jobs: -1
      bootstrap: true
      grid:
        max_depth: [null, 8, 16, 32]
        max_features: ["sqrt", 0.2, 0.5, 1.0]
        min_samples_leaf: [1, 5, 10]
    temperature_only:
      ridge_alpha_grid: [0.0, 1e-3, 1e-2, 1e-1, 1, 10]

  analysis:
    n_perm_quick: 1000
    n_perm_refit: 500
    perm_refit_n_jobs: 1
    # If true, each permutation refits full nested CV (slow but faithful)
    perm_refit_use_nested_cv: false
    rf_perm_importance_repeats: 20
    bootstrap_n: 1000
    # SHAP analysis optional subsampling (global SHAP only; LOSO SHAP ignores this)
    shap:
      subsample_n: null      # e.g., 200 (integer)
      subsample_frac: null   # e.g., 0.5 (0..1)
    riemann:
      plateau_window: [3.0, 10.5]
      # Minimum number of channels required after (train âˆ© test) intersection per fold
      min_channels_for_fold: 32
      bands: [[1.0, 4.0], [4.0, 8.0], [8.0, 13.0], [13.0, 30.0], [30.0, 45.0]]
      sliding_window:
        window_len: 0.75
        step: 0.25

  paths:
    results_subdir: "decoding"
    plots_subdir: "plots"
    best_params:
      elasticnet_loso: "decoding/best_params/elasticnet_loso.jsonl"
      rf_loso: "decoding/best_params/rf_loso.jsonl"
      elasticnet_within: "decoding/best_params/elasticnet_within.jsonl"
      rf_within: "decoding/best_params/rf_within.jsonl"
      riemann_loso: "decoding/best_params/riemann_loso.jsonl"
      riemann_band_template: "decoding/best_params/riemann_{label}_loso.jsonl"
      temperature_only: "decoding/best_params/temperature_only.jsonl"
    predictions:
      elasticnet_loso: "decoding/predictions/elasticnet_loso.tsv"
      elasticnet_within: "decoding/predictions/elasticnet_within.tsv"
      rf_loso: "decoding/predictions/rf_loso.tsv"
      rf_within: "decoding/predictions/rf_within.tsv"
      riemann_loso: "decoding/predictions/riemann_loso.tsv"
      riemann_band_template: "decoding/predictions/riemann_{label}_loso.tsv"
      temperature_only: "decoding/predictions/temperature_only.tsv"
      baseline_global: "decoding/predictions/baseline_global.tsv"
    per_subject_metrics:
      elasticnet_loso: "decoding/metrics/elasticnet_loso_per_subject.tsv"
      elasticnet_within: "decoding/metrics/elasticnet_within_per_subject.tsv"
      rf_loso: "decoding/metrics/rf_loso_per_subject.tsv"
      rf_within: "decoding/metrics/rf_within_per_subject.tsv"
      riemann_loso: "decoding/metrics/riemann_loso_per_subject.tsv"
      temperature_only: "decoding/metrics/temperature_only_per_subject.tsv"
      baseline_global: "decoding/metrics/baseline_global_per_subject.tsv"
    indices:
      elasticnet_loso: "decoding/indices/elasticnet_loso_indices.tsv"
      elasticnet_within: "decoding/indices/elasticnet_within_indices.tsv"
      rf_loso: "decoding/indices/rf_loso_indices.tsv"
      rf_within: "decoding/indices/rf_within_indices.tsv"
      riemann_loso: "decoding/indices/riemann_loso_indices.tsv"
      riemann_band_template: "decoding/indices/riemann_{label}_loso_indices.tsv"
      temperature_only: "decoding/indices/temperature_only_indices.tsv"
      baseline_global: "decoding/indices/baseline_global_indices.tsv"
    summaries:
      riemann_bands: "decoding/summaries/riemann_bands.json"
      riemann_sliding_window: "decoding/summaries/riemann_sliding_window.json"
      permutation_refit_null_rs: "decoding/summaries/permutation_refit_null_rs.txt"
      permutation_refit_summary: "decoding/summaries/permutation_refit_summary.json"
      all_metrics_wide: "decoding/summaries/all_metrics_wide.tsv"
      summary: "decoding/summaries/summary.json"
      incremental: "decoding/summaries/incremental_validity.json"

  flags:
    run_within_subject_kfold: true
    run_riemann: true
    run_shap: true

# =============================================================================
# GLOBAL ANALYSIS FLAGS
# =============================================================================
analysis:
  strict_mode: true   # Abort on alignment/unit inconsistencies rather than silently trimming/guessing
  annotate_fdr_on_figures: true  # Add figure note that correlation p-values are uncorrected; see FDR/q in stats
    
  

# =============================================================================
# STATISTICAL ANALYSIS SETTINGS
# =============================================================================
statistics:
  # Default statistical parameters
  use_spearman_default: true
  partial_covars_default: null
  n_perm_default: 0
  do_group_default: false
  group_only_default: false
  build_reports_default: true
  
  # Significance testing parameters
  sig_alpha: 0.05                    # Significance threshold
  diff_annotation_enabled: false     # Show cluster/FDR annotations and significance masks in topomaps
  
  # Cluster-based permutation testing parameters
  cluster_n_perm: 1024              # Number of permutations for cluster tests
  cluster_report_size: false         # Report cluster size in annotations
  cluster_report_mass: false         # Report cluster mass in annotations

# =============================================================================
# RANDOMIZATION SETTINGS
# =============================================================================
random:
  seed: 42
  bootstrap_default: 0

# =============================================================================
# LOGGING SETTINGS
# =============================================================================
logging:
  type: "file"
  level: "INFO"
  file_names:
    foundational: "01_foundational_analysis.log"
    time_frequency: "02_time_frequency_analysis.log"
    feature_engineering: "03_feature_engineering.log"
    behavior_analysis: "04_behavior_feature_analysis.log"
    decoding: "05_decode_pain_experience.log"

# =============================================================================
# OUTPUT AND VISUALIZATION SETTINGS
# =============================================================================
output:
  # Figure output settings
  fig_dpi: 300                        # DPI for saved figures
  pad_inches: 0.02                    # Padding around saved figures
  bbox_inches: "tight"                # Bounding box mode for saved figures
  save_formats: ["png", "svg"]       # Default formats to save figures
  
  # Matplotlib backend settings
  matplotlib_backend: "Agg"           # Headless-friendly backend

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
environment:
  thread_limits:
    OMP_NUM_THREADS: "1"
    MKL_NUM_THREADS: "1"
    OPENBLAS_NUM_THREADS: "1"
    NUMEXPR_NUM_THREADS: "1"
